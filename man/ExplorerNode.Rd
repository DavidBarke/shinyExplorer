% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ExplorerNode.R
\name{ExplorerNode}
\alias{ExplorerNode}
\title{ExplorerNode}
\description{
\code{\link[R6]{R6Class}} representing a node in an explorer tree which can
be traversed using the \code{explorer} module. Each node has an
\code{explorer_class} attached representing the general behaviour of
nodes with this \code{explorer_class} in the explorer. Furthermore an
object is attached representing the special behaviour and data associated with
this particular node.
}
\section{Important}{

You usually don't want to call explicitly \code{ExplorerNode$new}.
Instead you should create a new explorer tree with \code{\link{ExplorerTree}},
take its root node with \code{root <- explorer_tree$get_root_node()} and
afterwards call \code{root$add_child()}.
}

\section{Methods}{

\describe{
  \item{\code{add_addable(labels)}}{Add \code{labels} to the addable labels.
  }
  \item{\code{add_child(addable = NULL, explorer_class_id = "__group__",
    id = NULL, object = Object$new(), removable = TRUE, return = c("self", "child"),
    visible = NULL}}{Initialize a new node object which is attached to the
    current node object as a child, but only if this node is a group node.
    \tabular{ll}{
      \code{addable} \tab A \code{\link[base]{character}} vector of labels.
        Nodes of every explorer class that has one of these labels are addable
        as child nodes to this particular node. \cr
      \code{explorer_class_id} \tab Id of an object of class
        \code{\link{ExplorerClass}}, which defines the behaviour of the child
        node in the \code{\link{explorer}}. This object must be passed to
        \code{explorer} as an element of the \code{.explorer_classes} list. \cr
      \code{id} \tab Unique identifier of the node. If \code{\link[base:NULL]{NULL}},
        this identifier is created internally. \cr
      \code{object} \tab An arbitrary object for storing information about the
        child node.\cr
      \code{removable} \tab If \code{\link[base:logical]{TRUE}}, this node is
       removable by the user, else not. \cr
      \code{return} \tab If \code{"self"}, this method returns the node, which
        adds a child; If \code{"child"}, the added node is returned. \cr
      \code{visible} \tab A \code{\link[base]{character}} vector of labels.
        Nodes of every explorer class that has one of these labels are visible
        as child nodes to this particular node.
    }
  }
  \item{\code{add_visible(labels)}}{Add \code{labels} to the visible labels.
  }
  \item{\code{get_addable()}}{Get a \code{\link[base]{character}} vector of
    labels. Note: This does not include the labels of explorer classes that
    are addable to the current explorer or to all objects that share the same
    class with this node.
  }
  \item{\code{get_children()}}{Get an object of class \code{\link{ObjectStorage}}
    containing all children of this node. Each child is an object of class
    \code{ExplorerNode}.
  }
  \item{\code{get_child(id)}}{Get the child node object with \code{id == id}.
  }
  \item{\code{get_child_ids()}}{Get the ids of all child nodes of this
    node object.
  }
  \item{\code{get_child_objects}}{Get an object of class
    \code{\link{ObjectStorage}} containing all objects associated with the
    children of this node. These objects are usually heterogeneous, which means
    they are instances of different classes.
  }
  \item{\code{get_explorer_class_id()}}{Get the id of the object of class
    \code{explorer_class} associated with this node object.
  }
  \item{\code{get_id()}}{Get the id of the node object.
  }
  \item{\code{get_nth_child(n)}}{Get the nth child of this node object. The
    first added child is returned for code{n = 1}.
  }
  \item{\code{get_object()}}{Get the object associated with this node object.
  }
  \item{\code{get_parent_node()}}{Get the parent node of this node.
  }
  \item{\code{get_siblings()}}{Get an object of class \code{\link{ObjectStorage}}
    containing all siblings of this node. Each sibling is an object of class
    \code{ExplorerNode}.
  }
  \item{\code{get_visible()}}{Get a \code{\link[base]{character}} vector of
    labels. Note: This does not include the labels of explorer classes that
    are visible to the current explorer or to all objects that share the same
    class with this node.}
  \item{\code{is_removable()}}{Returns a \code{\link[base:logical]{logical}}
    indicating whether this node is removable or not.
  }
  \item{\code{remove_addable(labels)}}{Remove \code{labels} from the addable
    labels.
  }
  \item{\code{remove_child(id)}}{Remove the child with \code{id == id}.
  }
  \item{\code{remove_visible(labels)}}{Remove \code{labels} from the visible
    labels.
  }
  \item{\code{set_addable_explorer_classes(addable_explorer_classes)}}{Set
    the ids of the explorer classes, which are addable as children to this
    node.
    \tabular{ll}{
      \code{addable_explorer_classes} \tab
      \code{\link[base:character]{character}} vector \cr
    }
  }
  \item{\code{set_explorer_class_id(explorer_class_id)}}{Set the id of the
    object of class \code{explorer_class} associated with this node object.
  }
  \item{\code{set_object(object)}}{Set an arbitrary object associated with
    this node object.}
}
}

